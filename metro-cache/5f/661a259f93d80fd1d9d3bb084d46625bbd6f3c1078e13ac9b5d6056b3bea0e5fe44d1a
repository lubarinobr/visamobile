{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/objectSpread","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/assertThisInitialized","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/inherits","data":{"isAsync":false}},{"name":"./Query","data":{"isAsync":false}},{"name":"./DataSnapshot","data":{"isAsync":false}},{"name":"./OnDisconnect","data":{"isAsync":false}},{"name":"../../utils/log","data":{"isAsync":false}},{"name":"../../utils/native","data":{"isAsync":false}},{"name":"../../utils/ReferenceBase","data":{"isAsync":false}},{"name":"../../utils","data":{"isAsync":false}},{"name":"../../utils/SyncTree","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/objectSpread\"));\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/createClass\"));\n\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n\n  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/getPrototypeOf\"));\n\n  var _assertThisInitialized2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"@babel/runtime/helpers/assertThisInitialized\"));\n\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"@babel/runtime/helpers/inherits\"));\n\n  var _Query = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8], \"./Query\"));\n\n  var _DataSnapshot = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9], \"./DataSnapshot\"));\n\n  var _OnDisconnect = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10], \"./OnDisconnect\"));\n\n  var _log = _$$_REQUIRE(_dependencyMap[11], \"../../utils/log\");\n\n  var _native = _$$_REQUIRE(_dependencyMap[12], \"../../utils/native\");\n\n  var _ReferenceBase2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13], \"../../utils/ReferenceBase\"));\n\n  var _utils = _$$_REQUIRE(_dependencyMap[14], \"../../utils\");\n\n  var _SyncTree = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15], \"../../utils/SyncTree\"));\n\n  var listeners = 0;\n  var ReferenceEventTypes = {\n    value: 'value',\n    child_added: 'child_added',\n    child_removed: 'child_removed',\n    child_changed: 'child_changed',\n    child_moved: 'child_moved'\n  };\n\n  var Reference = function (_ReferenceBase) {\n    (0, _inherits2.default)(Reference, _ReferenceBase);\n\n    function Reference(database, path, existingModifiers) {\n      var _this;\n\n      (0, _classCallCheck2.default)(this, Reference);\n      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Reference).call(this, path));\n      _this._refListeners = {};\n      _this._database = database;\n      _this._query = new _Query.default((0, _assertThisInitialized2.default)(_this), existingModifiers);\n      (0, _log.getLogger)(database).debug('Created new Reference', _this._getRefKey());\n      return _this;\n    }\n\n    (0, _createClass2.default)(Reference, [{\n      key: \"keepSynced\",\n      value: function keepSynced(bool) {\n        return (0, _native.getNativeModule)(this._database).keepSynced(this._getRefKey(), this.path, this._query.getModifiers(), bool);\n      }\n    }, {\n      key: \"set\",\n      value: function set(value, onComplete) {\n        return (0, _utils.promiseOrCallback)((0, _native.getNativeModule)(this._database).set(this.path, this._serializeAnyType(value)), onComplete);\n      }\n    }, {\n      key: \"setPriority\",\n      value: function setPriority(priority, onComplete) {\n        var _priority = this._serializeAnyType(priority);\n\n        return (0, _utils.promiseOrCallback)((0, _native.getNativeModule)(this._database).setPriority(this.path, _priority), onComplete);\n      }\n    }, {\n      key: \"setWithPriority\",\n      value: function setWithPriority(value, priority, onComplete) {\n        var _value = this._serializeAnyType(value);\n\n        var _priority = this._serializeAnyType(priority);\n\n        return (0, _utils.promiseOrCallback)((0, _native.getNativeModule)(this._database).setWithPriority(this.path, _value, _priority), onComplete);\n      }\n    }, {\n      key: \"update\",\n      value: function update(val, onComplete) {\n        var value = this._serializeObject(val);\n\n        return (0, _utils.promiseOrCallback)((0, _native.getNativeModule)(this._database).update(this.path, value), onComplete);\n      }\n    }, {\n      key: \"remove\",\n      value: function remove(onComplete) {\n        return (0, _utils.promiseOrCallback)((0, _native.getNativeModule)(this._database).remove(this.path), onComplete);\n      }\n    }, {\n      key: \"transaction\",\n      value: function transaction(transactionUpdate, onComplete) {\n        var _this2 = this;\n\n        var applyLocally = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n        if (!(0, _utils.isFunction)(transactionUpdate)) {\n          return Promise.reject(new Error('Missing transactionUpdate function argument.'));\n        }\n\n        return new Promise(function (resolve, reject) {\n          var onCompleteWrapper = function onCompleteWrapper(error, committed, snapshotData) {\n            if ((0, _utils.isFunction)(onComplete)) {\n              if (error) {\n                onComplete(error, committed, null);\n              } else {\n                onComplete(null, committed, new _DataSnapshot.default(_this2, snapshotData));\n              }\n            }\n\n            if (error) return reject(error);\n            return resolve({\n              committed: committed,\n              snapshot: new _DataSnapshot.default(_this2, snapshotData)\n            });\n          };\n\n          _this2._database._transactionHandler.add(_this2, transactionUpdate, onCompleteWrapper, applyLocally);\n        });\n      }\n    }, {\n      key: \"once\",\n      value: function once() {\n        var _this3 = this;\n\n        var eventName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'value';\n        var successCallback = arguments.length > 1 ? arguments[1] : undefined;\n        var cancelOrContext = arguments.length > 2 ? arguments[2] : undefined;\n        var context = arguments.length > 3 ? arguments[3] : undefined;\n        return (0, _native.getNativeModule)(this._database).once(this._getRefKey(), this.path, this._query.getModifiers(), eventName).then(function (_ref) {\n          var snapshot = _ref.snapshot;\n\n          var _snapshot = new _DataSnapshot.default(_this3, snapshot);\n\n          if ((0, _utils.isFunction)(successCallback)) {\n            if ((0, _utils.isObject)(cancelOrContext)) successCallback.bind(cancelOrContext)(_snapshot);\n            if (context && (0, _utils.isObject)(context)) successCallback.bind(context)(_snapshot);\n            successCallback(_snapshot);\n          }\n\n          return _snapshot;\n        }).catch(function (error) {\n          if ((0, _utils.isFunction)(cancelOrContext)) return cancelOrContext(error);\n          throw error;\n        });\n      }\n    }, {\n      key: \"push\",\n      value: function push(value, onComplete) {\n        var name = (0, _utils.generatePushID)(this._database._serverTimeOffset);\n        var pushRef = this.child(name);\n        var thennablePushRef = this.child(name);\n        var promise;\n\n        if (value != null) {\n          promise = thennablePushRef.set(value, onComplete).then(function () {\n            return pushRef;\n          });\n        } else {\n          promise = Promise.resolve(pushRef);\n        }\n\n        thennablePushRef.then = promise.then.bind(promise);\n        thennablePushRef.catch = promise.catch.bind(promise);\n\n        if ((0, _utils.isFunction)(onComplete)) {\n          promise.catch(function () {});\n        }\n\n        return thennablePushRef;\n      }\n    }, {\n      key: \"orderByKey\",\n      value: function orderByKey() {\n        return this.orderBy('orderByKey');\n      }\n    }, {\n      key: \"orderByPriority\",\n      value: function orderByPriority() {\n        return this.orderBy('orderByPriority');\n      }\n    }, {\n      key: \"orderByValue\",\n      value: function orderByValue() {\n        return this.orderBy('orderByValue');\n      }\n    }, {\n      key: \"orderByChild\",\n      value: function orderByChild(key) {\n        return this.orderBy('orderByChild', key);\n      }\n    }, {\n      key: \"orderBy\",\n      value: function orderBy(name, key) {\n        var newRef = new Reference(this._database, this.path, this._query.getModifiers());\n\n        newRef._query.orderBy(name, key);\n\n        return newRef;\n      }\n    }, {\n      key: \"limitToLast\",\n      value: function limitToLast(limit) {\n        return this.limit('limitToLast', limit);\n      }\n    }, {\n      key: \"limitToFirst\",\n      value: function limitToFirst(limit) {\n        return this.limit('limitToFirst', limit);\n      }\n    }, {\n      key: \"limit\",\n      value: function limit(name, _limit) {\n        var newRef = new Reference(this._database, this.path, this._query.getModifiers());\n\n        newRef._query.limit(name, _limit);\n\n        return newRef;\n      }\n    }, {\n      key: \"equalTo\",\n      value: function equalTo(value, key) {\n        return this.filter('equalTo', value, key);\n      }\n    }, {\n      key: \"endAt\",\n      value: function endAt(value, key) {\n        return this.filter('endAt', value, key);\n      }\n    }, {\n      key: \"startAt\",\n      value: function startAt(value, key) {\n        return this.filter('startAt', value, key);\n      }\n    }, {\n      key: \"filter\",\n      value: function filter(name, value, key) {\n        var newRef = new Reference(this._database, this.path, this._query.getModifiers());\n\n        newRef._query.filter(name, value, key);\n\n        return newRef;\n      }\n    }, {\n      key: \"onDisconnect\",\n      value: function onDisconnect() {\n        return new _OnDisconnect.default(this);\n      }\n    }, {\n      key: \"child\",\n      value: function child(path) {\n        return new Reference(this._database, this.path + \"/\" + path);\n      }\n    }, {\n      key: \"toString\",\n      value: function toString() {\n        return \"\" + this._database.databaseUrl + this.path;\n      }\n    }, {\n      key: \"toJSON\",\n      value: function toJSON() {\n        return this.toString();\n      }\n    }, {\n      key: \"isEqual\",\n      value: function isEqual(otherRef) {\n        return !!otherRef && otherRef.constructor === Reference && otherRef.key === this.key && this._query.queryIdentifier() === otherRef._query.queryIdentifier();\n      }\n    }, {\n      key: \"_getRegistrationKey\",\n      value: function _getRegistrationKey(eventType) {\n        return \"$\" + this._database.databaseUrl + \"$/\" + this.path + \"$\" + this._query.queryIdentifier() + \"$\" + listeners + \"$\" + eventType;\n      }\n    }, {\n      key: \"_getRefKey\",\n      value: function _getRefKey() {\n        return \"$\" + this._database.databaseUrl + \"$/\" + this.path + \"$\" + this._query.queryIdentifier();\n      }\n    }, {\n      key: \"_serializeObject\",\n      value: function _serializeObject(obj) {\n        if (!(0, _utils.isObject)(obj)) return obj;\n        return (0, _utils.tryJSONParse)((0, _utils.tryJSONStringify)(obj));\n      }\n    }, {\n      key: \"_serializeAnyType\",\n      value: function _serializeAnyType(value) {\n        if ((0, _utils.isObject)(value)) {\n          return {\n            type: 'object',\n            value: this._serializeObject(value)\n          };\n        }\n\n        return {\n          type: typeof value,\n          value: value\n        };\n      }\n    }, {\n      key: \"on\",\n      value: function on(eventType, callback, cancelCallbackOrContext, context) {\n        if (!eventType) {\n          throw new Error('Query.on failed: Function called with 0 arguments. Expects at least 2.');\n        }\n\n        if (!(0, _utils.isString)(eventType) || !ReferenceEventTypes[eventType]) {\n          throw new Error(\"Query.on failed: First argument must be a valid string event type: \\\"\" + Object.keys(ReferenceEventTypes).join(', ') + \"\\\"\");\n        }\n\n        if (!callback) {\n          throw new Error('Query.on failed: Function called with 1 argument. Expects at least 2.');\n        }\n\n        if (!(0, _utils.isFunction)(callback)) {\n          throw new Error('Query.on failed: Second argument must be a valid function.');\n        }\n\n        if (cancelCallbackOrContext && !(0, _utils.isFunction)(cancelCallbackOrContext) && !(0, _utils.isObject)(context) && !(0, _utils.isObject)(cancelCallbackOrContext)) {\n          throw new Error('Query.on failed: Function called with 3 arguments, but third optional argument `cancelCallbackOrContext` was not a function.');\n        }\n\n        if (cancelCallbackOrContext && !(0, _utils.isFunction)(cancelCallbackOrContext) && context) {\n          throw new Error('Query.on failed: Function called with 4 arguments, but third optional argument `cancelCallbackOrContext` was not a function.');\n        }\n\n        var eventRegistrationKey = this._getRegistrationKey(eventType);\n\n        var registrationCancellationKey = eventRegistrationKey + \"$cancelled\";\n\n        var _context = cancelCallbackOrContext && !(0, _utils.isFunction)(cancelCallbackOrContext) ? cancelCallbackOrContext : context;\n\n        var registrationObj = {\n          eventType: eventType,\n          ref: this,\n          path: this.path,\n          key: this._getRefKey(),\n          appName: this._database.app.name,\n          dbURL: this._database.databaseUrl,\n          eventRegistrationKey: eventRegistrationKey\n        };\n\n        _SyncTree.default.addRegistration((0, _objectSpread2.default)({}, registrationObj, {\n          listener: _context ? callback.bind(_context) : callback\n        }));\n\n        if (cancelCallbackOrContext && (0, _utils.isFunction)(cancelCallbackOrContext)) {\n          _SyncTree.default.addRegistration({\n            ref: this,\n            once: true,\n            path: this.path,\n            key: this._getRefKey(),\n            appName: this._database.app.name,\n            dbURL: this._database.databaseUrl,\n            eventType: eventType + \"$cancelled\",\n            eventRegistrationKey: registrationCancellationKey,\n            listener: _context ? cancelCallbackOrContext.bind(_context) : cancelCallbackOrContext\n          });\n        }\n\n        (0, _native.getNativeModule)(this._database).on({\n          eventType: eventType,\n          path: this.path,\n          key: this._getRefKey(),\n          appName: this._database.app.name,\n          modifiers: this._query.getModifiers(),\n          hasCancellationCallback: (0, _utils.isFunction)(cancelCallbackOrContext),\n          registration: {\n            eventRegistrationKey: eventRegistrationKey,\n            key: registrationObj.key,\n            registrationCancellationKey: registrationCancellationKey\n          }\n        });\n        listeners += 1;\n        return callback;\n      }\n    }, {\n      key: \"off\",\n      value: function off() {\n        var eventType = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n        var originalCallback = arguments.length > 1 ? arguments[1] : undefined;\n\n        if (!arguments.length) {\n          return _SyncTree.default.removeListenersForRegistrations(_SyncTree.default.getRegistrationsByPath(this.path));\n        }\n\n        if (eventType && (!(0, _utils.isString)(eventType) || !ReferenceEventTypes[eventType])) {\n          throw new Error(\"Query.off failed: First argument must be a valid string event type: \\\"\" + Object.keys(ReferenceEventTypes).join(', ') + \"\\\"\");\n        }\n\n        if (originalCallback && !(0, _utils.isFunction)(originalCallback)) {\n          throw new Error('Query.off failed: Function called with 2 arguments, but second optional argument was not a function.');\n        }\n\n        if (eventType && originalCallback) {\n          var registration = _SyncTree.default.getOneByPathEventListener(this.path, eventType, originalCallback);\n\n          if (!registration) return [];\n\n          _SyncTree.default.removeListenersForRegistrations([registration + \"$cancelled\"]);\n\n          return _SyncTree.default.removeListenerRegistrations(originalCallback, [registration]);\n        }\n\n        var registrations = _SyncTree.default.getRegistrationsByPathEvent(this.path, eventType);\n\n        _SyncTree.default.removeListenersForRegistrations(_SyncTree.default.getRegistrationsByPathEvent(this.path, eventType + \"$cancelled\"));\n\n        return _SyncTree.default.removeListenersForRegistrations(registrations);\n      }\n    }, {\n      key: \"parent\",\n      get: function get() {\n        if (this.path === '/') return null;\n        return new Reference(this._database, this.path.substring(0, this.path.lastIndexOf('/')));\n      }\n    }, {\n      key: \"ref\",\n      get: function get() {\n        return this;\n      }\n    }, {\n      key: \"root\",\n      get: function get() {\n        return new Reference(this._database, '/');\n      }\n    }]);\n    return Reference;\n  }(_ReferenceBase2.default);\n\n  exports.default = Reference;\n});","map":[[23,0,5,0],[25,0,6,0],[27,0,7,0],[29,0,8,0],[31,0,9,0],[33,0,10,0],[35,0,11,0],[37,0,12,0],[39,0,14,0],[39,6,14,4,"listeners"],[39,15,14,13],[39,18,14,16],[39,19,14,0],[40,0,21,0],[40,6,21,6,"ReferenceEventTypes"],[40,25,21,25],[40,28,21,28],[41,0,22,2,"value"],[41,4,22,2,"value"],[41,9,22,7],[41,11,22,9],[41,18,21,28],[42,0,23,2,"child_added"],[42,4,23,2,"child_added"],[42,15,23,13],[42,17,23,15],[42,30,21,28],[43,0,24,2,"child_removed"],[43,4,24,2,"child_removed"],[43,17,24,15],[43,19,24,17],[43,34,21,28],[44,0,25,2,"child_changed"],[44,4,25,2,"child_changed"],[44,17,25,15],[44,19,25,17],[44,34,21,28],[45,0,26,2,"child_moved"],[45,4,26,2,"child_moved"],[45,15,26,13],[45,17,26,15],[46,0,21,28],[46,3,21,0],[48,6,56,21,"Reference"],[48,15],[51,0,57,2],[51,23,57,14,"database"],[51,31,57,2],[51,33,57,24,"path"],[51,37,57,2],[51,39,57,30,"existingModifiers"],[51,56,57,2],[51,58,57,49],[52,0,57,49],[54,0,57,49],[55,0,58,4],[55,113,58,10,"path"],[55,117,58,4],[56,0,59,4],[56,12,59,9,"_refListeners"],[56,25,59,4],[56,28,59,25],[56,30,59,4],[57,0,60,4],[57,12,60,9,"_database"],[57,21,60,4],[57,24,60,21,"database"],[57,32,60,4],[58,0,61,4],[58,12,61,9,"_query"],[58,18,61,4],[58,21,61,18],[58,25,61,22,"Query"],[58,39,61,18],[58,85,61,34,"existingModifiers"],[58,102,61,18],[58,103,61,4],[59,0,62,4],[59,26,62,14,"database"],[59,34,62,4],[59,36,62,24,"debug"],[59,41,62,4],[59,42,62,30],[59,65,62,4],[59,67,62,55],[59,73,62,60,"_getRefKey"],[59,83,62,55],[59,85,62,4],[60,0,57,49],[61,0,63,3],[65,33,76,13,"bool"],[65,37],[65,39,76,19],[66,0,77,4],[66,15,77,11],[66,44,77,27],[66,49,77,32,"_database"],[66,58,77,11],[66,60,77,43,"keepSynced"],[66,70,77,11],[66,71,77,54],[66,76,77,59,"_getRefKey"],[66,86,77,54],[66,88,77,11],[66,90,77,73],[66,95,77,78,"path"],[66,99,77,11],[66,101,77,84],[66,106,77,89,"_query"],[66,112,77,84],[66,113,77,96,"getModifiers"],[66,125,77,84],[66,127,77,11],[66,129,77,112,"bool"],[66,133,77,11],[66,134,77,4],[67,0,78,3],[70,26,89,6,"value"],[70,31],[70,33,89,13,"onComplete"],[70,43],[70,45,89,25],[71,0,90,4],[71,15,90,11],[71,45,90,29],[71,74,90,45],[71,79,90,50,"_database"],[71,88,90,29],[71,90,90,61,"set"],[71,93,90,29],[71,94,90,65],[71,99,90,70,"path"],[71,103,90,29],[71,105,90,76],[71,110,90,81,"_serializeAnyType"],[71,127,90,76],[71,128,90,99,"value"],[71,133,90,76],[71,134,90,29],[71,135,90,11],[71,137,90,108,"onComplete"],[71,147,90,11],[71,148,90,4],[72,0,91,3],[75,34,102,14,"priority"],[75,42],[75,44,102,24,"onComplete"],[75,54],[75,56,102,36],[76,0,103,4],[76,12,103,10,"_priority"],[76,21,103,19],[76,24,103,22],[76,29,103,27,"_serializeAnyType"],[76,46,103,22],[76,47,103,45,"priority"],[76,55,103,22],[76,56,103,4],[78,0,105,4],[78,15,105,11],[78,45,105,29],[78,74,105,45],[78,79,105,50,"_database"],[78,88,105,29],[78,90,105,61,"setPriority"],[78,101,105,29],[78,102,105,73],[78,107,105,78,"path"],[78,111,105,29],[78,113,105,84,"_priority"],[78,122,105,29],[78,123,105,11],[78,125,105,96,"onComplete"],[78,135,105,11],[78,136,105,4],[79,0,106,3],[82,38,118,18,"value"],[82,43],[82,45,118,25,"priority"],[82,53],[82,55,118,35,"onComplete"],[82,65],[82,67,118,47],[83,0,119,4],[83,12,119,10,"_value"],[83,18,119,16],[83,21,119,19],[83,26,119,24,"_serializeAnyType"],[83,43,119,19],[83,44,119,42,"value"],[83,49,119,19],[83,50,119,4],[85,0,121,4],[85,12,121,10,"_priority"],[85,21,121,19],[85,24,121,22],[85,29,121,27,"_serializeAnyType"],[85,46,121,22],[85,47,121,45,"priority"],[85,55,121,22],[85,56,121,4],[87,0,123,4],[87,15,123,11],[87,45,123,29],[87,74,123,45],[87,79,123,50,"_database"],[87,88,123,29],[87,90,123,61,"setWithPriority"],[87,105,123,29],[87,106,123,77],[87,111,123,82,"path"],[87,115,123,29],[87,117,123,88,"_value"],[87,123,123,29],[87,125,123,96,"_priority"],[87,134,123,29],[87,135,123,11],[87,137,123,108,"onComplete"],[87,147,123,11],[87,148,123,4],[88,0,124,3],[91,29,135,9,"val"],[91,32],[91,34,135,14,"onComplete"],[91,44],[91,46,135,26],[92,0,136,4],[92,12,136,10,"value"],[92,17,136,15],[92,20,136,18],[92,25,136,23,"_serializeObject"],[92,41,136,18],[92,42,136,40,"val"],[92,45,136,18],[92,46,136,4],[94,0,138,4],[94,15,138,11],[94,45,138,29],[94,74,138,45],[94,79,138,50,"_database"],[94,88,138,29],[94,90,138,61,"update"],[94,96,138,29],[94,97,138,68],[94,102,138,73,"path"],[94,106,138,29],[94,108,138,79,"value"],[94,113,138,29],[94,114,138,11],[94,116,138,87,"onComplete"],[94,126,138,11],[94,127,138,4],[95,0,139,3],[98,29,149,9,"onComplete"],[98,39],[98,41,149,21],[99,0,150,4],[99,15,150,11],[99,45,150,29],[99,74,150,45],[99,79,150,50,"_database"],[99,88,150,29],[99,90,150,61,"remove"],[99,96,150,29],[99,97,150,68],[99,102,150,73,"path"],[99,106,150,29],[99,107,150,11],[99,109,150,80,"onComplete"],[99,119,150,11],[99,120,150,4],[100,0,151,3],[103,34,162,14,"transactionUpdate"],[103,51],[103,53,162,33,"onComplete"],[103,63],[103,65,162,67],[104,0,162,67],[106,0,162,67],[106,12,162,45,"applyLocally"],[106,24,162,67],[106,95,162,60],[106,100,162,67],[108,0,163,4],[108,12,163,8],[108,13,163,9],[108,36,163,20,"transactionUpdate"],[108,53,163,9],[108,54,163,4],[108,56,163,40],[109,0,164,6],[109,17,164,13,"Promise"],[109,24,164,20],[109,25,164,21,"reject"],[109,31,164,13],[109,32,164,28],[109,36,164,32,"Error"],[109,41,164,28],[109,42,164,38],[109,88,164,28],[109,89,164,13],[109,90,164,6],[110,0,165,5],[112,0,167,4],[112,15,167,11],[112,19,167,15,"Promise"],[112,26,167,11],[112,27,167,23],[112,37,167,24,"resolve"],[112,44,167,23],[112,46,167,33,"reject"],[112,52,167,23],[112,54,167,44],[113,0,168,6],[113,14,168,12,"onCompleteWrapper"],[113,31,168,29],[113,34,168,32],[113,43,168,12,"onCompleteWrapper"],[113,60,168,32],[113,61,168,33,"error"],[113,66,168,32],[113,68,168,40,"committed"],[113,77,168,32],[113,79,168,51,"snapshotData"],[113,91,168,32],[113,93,168,68],[114,0,169,8],[114,16,169,12],[114,39,169,23,"onComplete"],[114,49,169,12],[114,50,169,8],[114,52,169,36],[115,0,170,10],[115,18,170,14,"error"],[115,23,170,10],[115,25,170,21],[116,0,171,12,"onComplete"],[116,16,171,12,"onComplete"],[116,26,171,22],[116,27,171,23,"error"],[116,32,171,22],[116,34,171,30,"committed"],[116,43,171,22],[116,45,171,41],[116,49,171,22],[116,50,171,12],[117,0,172,11],[117,15,170,10],[117,21,172,17],[118,0,173,12,"onComplete"],[118,16,173,12,"onComplete"],[118,26,173,22],[118,27,173,23],[118,31,173,22],[118,33,173,29,"committed"],[118,42,173,22],[118,44,173,40],[118,48,173,44,"DataSnapshot"],[118,69,173,40],[118,70,173,57],[118,76,173,40],[118,78,173,63,"snapshotData"],[118,90,173,40],[118,91,173,22],[118,92,173,12],[119,0,174,11],[120,0,175,9],[122,0,177,8],[122,16,177,12,"error"],[122,21,177,8],[122,23,177,19],[122,30,177,26,"reject"],[122,36,177,32],[122,37,177,33,"error"],[122,42,177,32],[122,43,177,19],[123,0,178,8],[123,19,178,15,"resolve"],[123,26,178,22],[123,27,178,23],[124,0,179,10,"committed"],[124,14,179,10,"committed"],[124,23,179,19],[124,25,179,10,"committed"],[124,34,178,23],[125,0,180,10,"snapshot"],[125,14,180,10,"snapshot"],[125,22,180,18],[125,24,180,20],[125,28,180,24,"DataSnapshot"],[125,49,180,20],[125,50,180,37],[125,56,180,20],[125,58,180,43,"snapshotData"],[125,70,180,20],[126,0,178,23],[126,13,178,22],[126,14,178,8],[127,0,182,7],[127,11,168,6],[129,0,185,6],[129,10,185,6],[129,16,185,10],[129,17,185,11,"_database"],[129,26,185,6],[129,27,185,21,"_transactionHandler"],[129,46,185,6],[129,47,185,41,"add"],[129,50,185,6],[129,51,185,45],[129,57,185,6],[129,59,185,51,"transactionUpdate"],[129,76,185,6],[129,78,185,70,"onCompleteWrapper"],[129,95,185,6],[129,97,185,89,"applyLocally"],[129,109,185,6],[130,0,186,5],[130,9,167,11],[130,10,167,4],[131,0,187,3],[134,29,198,71],[135,0,198,71],[137,0,198,71],[137,12,198,7,"eventName"],[137,21,198,71],[137,92,198,19],[137,99,198,71],[138,0,198,71],[138,12,198,28,"successCallback"],[138,27,198,71],[139,0,198,71],[139,12,198,45,"cancelOrContext"],[139,27,198,71],[140,0,198,71],[140,12,198,62,"context"],[140,19,198,71],[141,0,199,4],[141,15,199,11],[141,44,199,27],[141,49,199,32,"_database"],[141,58,199,11],[141,60,199,43,"once"],[141,64,199,11],[141,65,199,48],[141,70,199,53,"_getRefKey"],[141,80,199,48],[141,82,199,11],[141,84,199,67],[141,89,199,72,"path"],[141,93,199,11],[141,95,199,78],[141,100,199,83,"_query"],[141,106,199,78],[141,107,199,90,"getModifiers"],[141,119,199,78],[141,121,199,11],[141,123,199,106,"eventName"],[141,132,199,11],[141,134,199,117,"then"],[141,138,199,11],[141,139,199,122],[141,155,201,10],[142,0,201,10],[142,14,200,6,"snapshot"],[142,22,201,10],[142,30,200,6,"snapshot"],[142,38,201,10],[144,0,202,6],[144,14,202,12,"_snapshot"],[144,23,202,21],[144,26,202,24],[144,30,202,28,"DataSnapshot"],[144,51,202,24],[144,52,202,41],[144,58,202,24],[144,60,202,47,"snapshot"],[144,68,202,24],[144,69,202,6],[146,0,204,6],[146,14,204,10],[146,37,204,21,"successCallback"],[146,52,204,10],[146,53,204,6],[146,55,204,39],[147,0,205,8],[147,16,205,12],[147,37,205,21,"cancelOrContext"],[147,52,205,12],[147,53,205,8],[147,55,205,39,"successCallback"],[147,70,205,54],[147,71,205,55,"bind"],[147,75,205,39],[147,76,205,60,"cancelOrContext"],[147,91,205,39],[147,93,205,77,"_snapshot"],[147,102,205,39],[148,0,206,8],[148,16,206,12,"context"],[148,23,206,19],[148,27,206,23],[148,48,206,32,"context"],[148,55,206,23],[148,56,206,8],[148,58,206,42,"successCallback"],[148,73,206,57],[148,74,206,58,"bind"],[148,78,206,42],[148,79,206,63,"context"],[148,86,206,42],[148,88,206,72,"_snapshot"],[148,97,206,42],[149,0,207,8,"successCallback"],[149,12,207,8,"successCallback"],[149,27,207,23],[149,28,207,24,"_snapshot"],[149,37,207,23],[149,38,207,8],[150,0,208,7],[152,0,210,6],[152,17,210,13,"_snapshot"],[152,26,210,6],[153,0,211,5],[153,9,199,11],[153,11,211,7,"catch"],[153,16,199,11],[153,17,211,13],[153,27,211,13,"error"],[153,32,211,18],[153,34,211,22],[154,0,212,6],[154,14,212,10],[154,37,212,21,"cancelOrContext"],[154,52,212,10],[154,53,212,6],[154,55,212,39],[154,62,212,46,"cancelOrContext"],[154,77,212,61],[154,78,212,62,"error"],[154,83,212,61],[154,84,212,39],[155,0,213,6],[155,16,213,12,"error"],[155,21,213,6],[156,0,214,5],[156,9,199,11],[156,10,199,4],[157,0,215,3],[160,27,224,7,"value"],[160,32],[160,34,224,14,"onComplete"],[160,44],[160,46,224,26],[161,0,225,4],[161,12,225,10,"name"],[161,16,225,14],[161,19,225,17],[161,46,225,32],[161,51,225,37,"_database"],[161,60,225,32],[161,61,225,47,"_serverTimeOffset"],[161,78,225,17],[161,79,225,4],[162,0,226,4],[162,12,226,10,"pushRef"],[162,19,226,17],[162,22,226,20],[162,27,226,25,"child"],[162,32,226,20],[162,33,226,31,"name"],[162,37,226,20],[162,38,226,4],[163,0,227,4],[163,12,227,10,"thennablePushRef"],[163,28,227,26],[163,31,227,29],[163,36,227,34,"child"],[163,41,227,29],[163,42,227,40,"name"],[163,46,227,29],[163,47,227,4],[164,0,228,4],[164,12,228,8,"promise"],[164,19,228,4],[166,0,230,4],[166,12,230,8,"value"],[166,17,230,13],[166,21,230,17],[166,25,230,4],[166,27,230,23],[167,0,231,6,"promise"],[167,10,231,6,"promise"],[167,17,231,13],[167,20,231,16,"thennablePushRef"],[167,36,231,32],[167,37,231,33,"set"],[167,40,231,16],[167,41,231,37,"value"],[167,46,231,16],[167,48,231,44,"onComplete"],[167,58,231,16],[167,60,231,56,"then"],[167,64,231,16],[167,65,231,61],[168,0,231,61],[168,19,231,67,"pushRef"],[168,26,231,61],[169,0,231,61],[169,11,231,16],[169,12,231,6],[170,0,232,5],[170,9,230,4],[170,15,232,11],[171,0,233,6,"promise"],[171,10,233,6,"promise"],[171,17,233,13],[171,20,233,16,"Promise"],[171,27,233,23],[171,28,233,24,"resolve"],[171,35,233,16],[171,36,233,32,"pushRef"],[171,43,233,16],[171,44,233,6],[172,0,234,5],[174,0,236,4,"thennablePushRef"],[174,8,236,4,"thennablePushRef"],[174,24,236,20],[174,25,236,21,"then"],[174,29,236,4],[174,32,236,28,"promise"],[174,39,236,35],[174,40,236,36,"then"],[174,44,236,28],[174,45,236,41,"bind"],[174,49,236,28],[174,50,236,46,"promise"],[174,57,236,28],[174,58,236,4],[175,0,237,4,"thennablePushRef"],[175,8,237,4,"thennablePushRef"],[175,24,237,20],[175,25,237,21,"catch"],[175,30,237,4],[175,33,237,29,"promise"],[175,40,237,36],[175,41,237,37,"catch"],[175,46,237,29],[175,47,237,43,"bind"],[175,51,237,29],[175,52,237,48,"promise"],[175,59,237,29],[175,60,237,4],[177,0,239,4],[177,12,239,8],[177,35,239,19,"onComplete"],[177,45,239,8],[177,46,239,4],[177,48,239,32],[178,0,240,6,"promise"],[178,10,240,6,"promise"],[178,17,240,13],[178,18,240,14,"catch"],[178,23,240,6],[178,24,240,20],[178,36,240,26],[178,37,240,28],[178,38,240,6],[179,0,241,5],[181,0,243,4],[181,15,243,11,"thennablePushRef"],[181,31,243,4],[182,0,244,3],[185,35,255,15],[186,0,256,4],[186,15,256,11],[186,20,256,16,"orderBy"],[186,27,256,11],[186,28,256,24],[186,40,256,11],[186,41,256,4],[187,0,257,3],[190,40,264,20],[191,0,265,4],[191,15,265,11],[191,20,265,16,"orderBy"],[191,27,265,11],[191,28,265,24],[191,45,265,11],[191,46,265,4],[192,0,266,3],[195,37,273,17],[196,0,274,4],[196,15,274,11],[196,20,274,16,"orderBy"],[196,27,274,11],[196,28,274,24],[196,42,274,11],[196,43,274,4],[197,0,275,3],[200,35,283,15,"key"],[200,38],[200,40,283,20],[201,0,284,4],[201,15,284,11],[201,20,284,16,"orderBy"],[201,27,284,11],[201,28,284,24],[201,42,284,11],[201,44,284,40,"key"],[201,47,284,11],[201,48,284,4],[202,0,285,3],[205,30,294,10,"name"],[205,34],[205,36,294,16,"key"],[205,39],[205,41,294,21],[206,0,295,4],[206,12,295,10,"newRef"],[206,18,295,16],[206,21,295,19],[206,25,295,23,"Reference"],[206,34,295,19],[206,35,295,33],[206,40,295,38,"_database"],[206,49,295,19],[206,51,295,49],[206,56,295,54,"path"],[206,60,295,19],[206,62,295,60],[206,67,295,65,"_query"],[206,73,295,60],[206,74,295,72,"getModifiers"],[206,86,295,60],[206,88,295,19],[206,89,295,4],[208,0,297,4,"newRef"],[208,8,297,4,"newRef"],[208,14,297,10],[208,15,297,11,"_query"],[208,21,297,4],[208,22,297,18,"orderBy"],[208,29,297,4],[208,30,297,26,"name"],[208,34,297,4],[208,36,297,32,"key"],[208,39,297,4],[210,0,299,4],[210,15,299,11,"newRef"],[210,21,299,4],[211,0,300,3],[214,34,312,14,"limit"],[214,39],[214,41,312,21],[215,0,313,4],[215,15,313,11],[215,20,313,16,"limit"],[215,25,313,11],[215,26,313,22],[215,39,313,11],[215,41,313,37,"limit"],[215,46,313,11],[215,47,313,4],[216,0,314,3],[219,35,322,15,"limit"],[219,40],[219,42,322,22],[220,0,323,4],[220,15,323,11],[220,20,323,16,"limit"],[220,25,323,11],[220,26,323,22],[220,40,323,11],[220,42,323,38,"limit"],[220,47,323,11],[220,48,323,4],[221,0,324,3],[224,28,333,8,"name"],[224,32],[224,34,333,14,"limit"],[224,40],[224,42,333,21],[225,0,334,4],[225,12,334,10,"newRef"],[225,18,334,16],[225,21,334,19],[225,25,334,23,"Reference"],[225,34,334,19],[225,35,334,33],[225,40,334,38,"_database"],[225,49,334,19],[225,51,334,49],[225,56,334,54,"path"],[225,60,334,19],[225,62,334,60],[225,67,334,65,"_query"],[225,73,334,60],[225,74,334,72,"getModifiers"],[225,86,334,60],[225,88,334,19],[225,89,334,4],[227,0,336,4,"newRef"],[227,8,336,4,"newRef"],[227,14,336,10],[227,15,336,11,"_query"],[227,21,336,4],[227,22,336,18,"limit"],[227,27,336,4],[227,28,336,24,"name"],[227,32,336,4],[227,34,336,30,"limit"],[227,40,336,4],[229,0,338,4],[229,15,338,11,"newRef"],[229,21,338,4],[230,0,339,3],[233,30,352,10,"value"],[233,35],[233,37,352,17,"key"],[233,40],[233,42,352,22],[234,0,353,4],[234,15,353,11],[234,20,353,16,"filter"],[234,26,353,11],[234,27,353,23],[234,36,353,11],[234,38,353,34,"value"],[234,43,353,11],[234,45,353,41,"key"],[234,48,353,11],[234,49,353,4],[235,0,354,3],[238,28,363,8,"value"],[238,33],[238,35,363,15,"key"],[238,38],[238,40,363,20],[239,0,364,4],[239,15,364,11],[239,20,364,16,"filter"],[239,26,364,11],[239,27,364,23],[239,34,364,11],[239,36,364,32,"value"],[239,41,364,11],[239,43,364,39,"key"],[239,46,364,11],[239,47,364,4],[240,0,365,3],[243,30,374,10,"value"],[243,35],[243,37,374,17,"key"],[243,40],[243,42,374,22],[244,0,375,4],[244,15,375,11],[244,20,375,16,"filter"],[244,26,375,11],[244,27,375,23],[244,36,375,11],[244,38,375,34,"value"],[244,43,375,11],[244,45,375,41,"key"],[244,48,375,11],[244,49,375,4],[245,0,376,3],[248,29,386,9,"name"],[248,33],[248,35,386,15,"value"],[248,40],[248,42,386,22,"key"],[248,45],[248,47,386,27],[249,0,387,4],[249,12,387,10,"newRef"],[249,18,387,16],[249,21,387,19],[249,25,387,23,"Reference"],[249,34,387,19],[249,35,387,33],[249,40,387,38,"_database"],[249,49,387,19],[249,51,387,49],[249,56,387,54,"path"],[249,60,387,19],[249,62,387,60],[249,67,387,65,"_query"],[249,73,387,60],[249,74,387,72,"getModifiers"],[249,86,387,60],[249,88,387,19],[249,89,387,4],[251,0,389,4,"newRef"],[251,8,389,4,"newRef"],[251,14,389,10],[251,15,389,11,"_query"],[251,21,389,4],[251,22,389,18,"filter"],[251,28,389,4],[251,29,389,25,"name"],[251,33,389,4],[251,35,389,31,"value"],[251,40,389,4],[251,42,389,38,"key"],[251,45,389,4],[253,0,391,4],[253,15,391,11,"newRef"],[253,21,391,4],[254,0,392,3],[257,37,399,17],[258,0,400,4],[258,15,400,11],[258,19,400,15,"OnDisconnect"],[258,40,400,11],[258,41,400,28],[258,45,400,11],[258,46,400,4],[259,0,401,3],[262,28,412,8,"path"],[262,32],[262,34,412,14],[263,0,413,4],[263,15,413,11],[263,19,413,15,"Reference"],[263,28,413,11],[263,29,413,25],[263,34,413,30,"_database"],[263,43,413,11],[263,45,413,44],[263,50,413,49,"path"],[263,54,413,11],[263,63,413,57,"path"],[263,67,413,11],[263,68,413,4],[264,0,414,3],[267,33,421,13],[268,0,422,4],[268,20,422,14],[268,25,422,19,"_database"],[268,34,422,14],[268,35,422,29,"databaseUrl"],[268,46,422,4],[268,49,422,43],[268,54,422,48,"path"],[268,58,422,4],[269,0,423,3],[272,31,430,11],[273,0,431,4],[273,15,431,11],[273,20,431,16,"toString"],[273,28,431,11],[273,30,431,4],[274,0,432,3],[277,30,443,10,"otherRef"],[277,38],[277,40,443,20],[278,0,444,4],[278,15,444,11],[278,16,444,12],[278,17,444,13,"otherRef"],[278,25,444,11],[278,29,444,25,"otherRef"],[278,37,444,33],[278,38,444,34,"constructor"],[278,49,444,25],[278,54,444,50,"Reference"],[278,63,444,11],[278,67,444,63,"otherRef"],[278,75,444,71],[278,76,444,72,"key"],[278,79,444,63],[278,84,444,80],[278,89,444,85,"key"],[278,92,444,11],[278,96,444,92],[278,101,444,97,"_query"],[278,107,444,92],[278,108,444,104,"queryIdentifier"],[278,123,444,92],[278,130,444,126,"otherRef"],[278,138,444,134],[278,139,444,135,"_query"],[278,145,444,126],[278,146,444,142,"queryIdentifier"],[278,161,444,126],[278,163,444,4],[279,0,445,3],[282,42,495,22,"eventType"],[282,51],[282,53,495,33],[283,0,496,4],[283,21,496,15],[283,26,496,20,"_database"],[283,35,496,15],[283,36,496,30,"databaseUrl"],[283,47,496,4],[283,57,496,46],[283,62,496,51,"path"],[283,66,496,4],[283,75,496,59],[283,80,496,64,"_query"],[283,86,496,59],[283,87,496,71,"queryIdentifier"],[283,102,496,59],[283,104,496,4],[283,113,496,92,"listeners"],[283,122,496,4],[283,131,496,105,"eventType"],[283,140,496,4],[284,0,497,3],[287,35,507,15],[288,0,508,4],[288,21,508,15],[288,26,508,20,"_database"],[288,35,508,15],[288,36,508,30,"databaseUrl"],[288,47,508,4],[288,57,508,46],[288,62,508,51,"path"],[288,66,508,4],[288,75,508,59],[288,80,508,64,"_query"],[288,86,508,59],[288,87,508,71,"queryIdentifier"],[288,102,508,59],[288,104,508,4],[289,0,509,3],[292,39,518,19,"obj"],[292,42],[292,44,518,24],[293,0,519,4],[293,12,519,8],[293,13,519,9],[293,34,519,18,"obj"],[293,37,519,9],[293,38,519,4],[293,40,519,24],[293,47,519,31,"obj"],[293,50,519,24],[294,0,522,4],[294,15,522,11],[294,40,522,24],[294,69,522,41,"obj"],[294,72,522,24],[294,73,522,11],[294,74,522,4],[295,0,523,3],[298,40,532,20,"value"],[298,45],[298,47,532,27],[299,0,533,4],[299,12,533,8],[299,33,533,17,"value"],[299,38,533,8],[299,39,533,4],[299,41,533,25],[300,0,534,6],[300,17,534,13],[301,0,535,8,"type"],[301,12,535,8,"type"],[301,16,535,12],[301,18,535,14],[301,26,534,13],[302,0,536,8,"value"],[302,12,536,8,"value"],[302,17,536,13],[302,19,536,15],[302,24,536,20,"_serializeObject"],[302,40,536,15],[302,41,536,37,"value"],[302,46,536,15],[303,0,534,13],[303,11,534,6],[304,0,538,5],[306,0,540,4],[306,15,540,11],[307,0,541,6,"type"],[307,10,541,6,"type"],[307,14,541,10],[307,16,541,12],[307,23,541,19,"value"],[307,28,540,11],[308,0,542,6,"value"],[308,10,542,6,"value"],[308,15,542,11],[308,17,542,6,"value"],[309,0,540,11],[309,9,540,4],[310,0,544,3],[313,25,573,5,"eventType"],[313,34],[313,36,573,16,"callback"],[313,44],[313,46,573,26,"cancelCallbackOrContext"],[313,69],[313,71,573,51,"context"],[313,78],[313,80,573,60],[314,0,574,4],[314,12,574,8],[314,13,574,9,"eventType"],[314,22,574,4],[314,24,574,20],[315,0,575,6],[315,16,575,12],[315,20,575,16,"Error"],[315,25,575,12],[315,26,575,22],[315,98,575,12],[315,99,575,6],[316,0,576,5],[318,0,578,4],[318,12,578,8],[318,13,578,9],[318,34,578,18,"eventType"],[318,43,578,9],[318,44,578,8],[318,48,578,32],[318,49,578,33,"ReferenceEventTypes"],[318,68,578,52],[318,69,578,53,"eventType"],[318,78,578,52],[318,79,578,4],[318,81,578,65],[319,0,579,6],[319,16,579,12],[319,20,579,16,"Error"],[319,25,579,12],[319,100,579,93,"Object"],[319,106,579,99],[319,107,579,100,"keys"],[319,111,579,93],[319,112,579,105,"ReferenceEventTypes"],[319,131,579,93],[319,133,579,126,"join"],[319,137,579,93],[319,138,579,131],[319,142,579,93],[319,143,579,12],[319,151,579,6],[320,0,580,5],[322,0,582,4],[322,12,582,8],[322,13,582,9,"callback"],[322,21,582,4],[322,23,582,19],[323,0,583,6],[323,16,583,12],[323,20,583,16,"Error"],[323,25,583,12],[323,26,583,22],[323,97,583,12],[323,98,583,6],[324,0,584,5],[326,0,586,4],[326,12,586,8],[326,13,586,9],[326,36,586,20,"callback"],[326,44,586,9],[326,45,586,4],[326,47,586,31],[327,0,587,6],[327,16,587,12],[327,20,587,16,"Error"],[327,25,587,12],[327,26,587,22],[327,86,587,12],[327,87,587,6],[328,0,588,5],[330,0,590,4],[330,12,590,8,"cancelCallbackOrContext"],[330,35,590,31],[330,39,590,35],[330,40,590,36],[330,63,590,47,"cancelCallbackOrContext"],[330,86,590,36],[330,87,590,8],[330,91,590,75],[330,92,590,76],[330,113,590,85,"context"],[330,120,590,76],[330,121,590,8],[330,125,590,97],[330,126,590,98],[330,147,590,107,"cancelCallbackOrContext"],[330,170,590,98],[330,171,590,4],[330,173,590,133],[331,0,591,6],[331,16,591,12],[331,20,591,16,"Error"],[331,25,591,12],[331,26,591,22],[331,152,591,12],[331,153,591,6],[332,0,592,5],[334,0,594,4],[334,12,594,8,"cancelCallbackOrContext"],[334,35,594,31],[334,39,594,35],[334,40,594,36],[334,63,594,47,"cancelCallbackOrContext"],[334,86,594,36],[334,87,594,8],[334,91,594,75,"context"],[334,98,594,4],[334,100,594,84],[335,0,595,6],[335,16,595,12],[335,20,595,16,"Error"],[335,25,595,12],[335,26,595,22],[335,152,595,12],[335,153,595,6],[336,0,596,5],[338,0,598,4],[338,12,598,10,"eventRegistrationKey"],[338,32,598,30],[338,35,598,33],[338,40,598,38,"_getRegistrationKey"],[338,59,598,33],[338,60,598,58,"eventType"],[338,69,598,33],[338,70,598,4],[340,0,600,4],[340,12,600,10,"registrationCancellationKey"],[340,39,600,37],[340,42,600,43,"eventRegistrationKey"],[340,62,600,37],[340,77,600,4],[342,0,602,4],[342,12,602,10,"_context"],[342,20,602,18],[342,23,602,21,"cancelCallbackOrContext"],[342,46,602,44],[342,50,602,48],[342,51,602,49],[342,74,602,60,"cancelCallbackOrContext"],[342,97,602,49],[342,98,602,21],[342,101,602,87,"cancelCallbackOrContext"],[342,124,602,21],[342,127,602,113,"context"],[342,134,602,4],[344,0,604,4],[344,12,604,10,"registrationObj"],[344,27,604,25],[344,30,604,28],[345,0,605,6,"eventType"],[345,10,605,6,"eventType"],[345,19,605,15],[345,21,605,6,"eventType"],[345,30,604,28],[346,0,606,6,"ref"],[346,10,606,6,"ref"],[346,13,606,9],[346,15,606,11],[346,19,604,28],[347,0,607,6,"path"],[347,10,607,6,"path"],[347,14,607,10],[347,16,607,12],[347,21,607,17,"path"],[347,25,604,28],[348,0,608,6,"key"],[348,10,608,6,"key"],[348,13,608,9],[348,15,608,11],[348,20,608,16,"_getRefKey"],[348,30,608,11],[348,32,604,28],[349,0,609,6,"appName"],[349,10,609,6,"appName"],[349,17,609,13],[349,19,609,15],[349,24,609,20,"_database"],[349,33,609,15],[349,34,609,30,"app"],[349,37,609,15],[349,38,609,34,"name"],[349,42,604,28],[350,0,610,6,"dbURL"],[350,10,610,6,"dbURL"],[350,15,610,11],[350,17,610,13],[350,22,610,18,"_database"],[350,31,610,13],[350,32,610,28,"databaseUrl"],[350,43,604,28],[351,0,611,6,"eventRegistrationKey"],[351,10,611,6,"eventRegistrationKey"],[351,30,611,26],[351,32,611,6,"eventRegistrationKey"],[352,0,604,28],[352,9,604,4],[354,0,613,4,"SyncTree"],[354,26,613,13,"addRegistration"],[354,41,613,4],[354,74,613,34,"registrationObj"],[354,89,613,4],[355,0,614,6,"listener"],[355,10,614,6,"listener"],[355,18,614,14],[355,20,614,16,"_context"],[355,28,614,24],[355,31,614,27,"callback"],[355,39,614,35],[355,40,614,36,"bind"],[355,44,614,27],[355,45,614,41,"_context"],[355,53,614,27],[355,54,614,24],[355,57,614,53,"callback"],[356,0,613,4],[358,0,617,4],[358,12,617,8,"cancelCallbackOrContext"],[358,35,617,31],[358,39,617,35],[358,62,617,46,"cancelCallbackOrContext"],[358,85,617,35],[358,86,617,4],[358,88,617,72],[359,0,621,6,"SyncTree"],[359,28,621,15,"addRegistration"],[359,43,621,6],[359,44,621,31],[360,0,622,8,"ref"],[360,12,622,8,"ref"],[360,15,622,11],[360,17,622,13],[360,21,621,31],[361,0,623,8,"once"],[361,12,623,8,"once"],[361,16,623,12],[361,18,623,14],[361,22,621,31],[362,0,624,8,"path"],[362,12,624,8,"path"],[362,16,624,12],[362,18,624,14],[362,23,624,19,"path"],[362,27,621,31],[363,0,625,8,"key"],[363,12,625,8,"key"],[363,15,625,11],[363,17,625,13],[363,22,625,18,"_getRefKey"],[363,32,625,13],[363,34,621,31],[364,0,626,8,"appName"],[364,12,626,8,"appName"],[364,19,626,15],[364,21,626,17],[364,26,626,22,"_database"],[364,35,626,17],[364,36,626,32,"app"],[364,39,626,17],[364,40,626,36,"name"],[364,44,621,31],[365,0,627,8,"dbURL"],[365,12,627,8,"dbURL"],[365,17,627,13],[365,19,627,15],[365,24,627,20,"_database"],[365,33,627,15],[365,34,627,30,"databaseUrl"],[365,45,621,31],[366,0,628,8,"eventType"],[366,12,628,8,"eventType"],[366,21,628,17],[366,23,628,22,"eventType"],[366,32,628,17],[366,47,621,31],[367,0,629,8,"eventRegistrationKey"],[367,12,629,8,"eventRegistrationKey"],[367,32,629,28],[367,34,629,30,"registrationCancellationKey"],[367,61,621,31],[368,0,630,8,"listener"],[368,12,630,8,"listener"],[368,20,630,16],[368,22,630,18,"_context"],[368,30,630,26],[368,33,630,29,"cancelCallbackOrContext"],[368,56,630,52],[368,57,630,53,"bind"],[368,61,630,29],[368,62,630,58,"_context"],[368,70,630,29],[368,71,630,26],[368,74,630,70,"cancelCallbackOrContext"],[369,0,621,31],[369,11,621,6],[370,0,632,5],[372,0,635,4],[372,37,635,20],[372,42,635,25,"_database"],[372,51,635,4],[372,53,635,36,"on"],[372,55,635,4],[372,56,635,39],[373,0,636,6,"eventType"],[373,10,636,6,"eventType"],[373,19,636,15],[373,21,636,6,"eventType"],[373,30,635,39],[374,0,637,6,"path"],[374,10,637,6,"path"],[374,14,637,10],[374,16,637,12],[374,21,637,17,"path"],[374,25,635,39],[375,0,638,6,"key"],[375,10,638,6,"key"],[375,13,638,9],[375,15,638,11],[375,20,638,16,"_getRefKey"],[375,30,638,11],[375,32,635,39],[376,0,639,6,"appName"],[376,10,639,6,"appName"],[376,17,639,13],[376,19,639,15],[376,24,639,20,"_database"],[376,33,639,15],[376,34,639,30,"app"],[376,37,639,15],[376,38,639,34,"name"],[376,42,635,39],[377,0,640,6,"modifiers"],[377,10,640,6,"modifiers"],[377,19,640,15],[377,21,640,17],[377,26,640,22,"_query"],[377,32,640,17],[377,33,640,29,"getModifiers"],[377,45,640,17],[377,47,635,39],[378,0,641,6,"hasCancellationCallback"],[378,10,641,6,"hasCancellationCallback"],[378,33,641,29],[378,35,641,31],[378,58,641,42,"cancelCallbackOrContext"],[378,81,641,31],[378,82,635,39],[379,0,642,6,"registration"],[379,10,642,6,"registration"],[379,22,642,18],[379,24,642,20],[380,0,643,8,"eventRegistrationKey"],[380,12,643,8,"eventRegistrationKey"],[380,32,643,28],[380,34,643,8,"eventRegistrationKey"],[380,54,642,20],[381,0,644,8,"key"],[381,12,644,8,"key"],[381,15,644,11],[381,17,644,13,"registrationObj"],[381,32,644,28],[381,33,644,29,"key"],[381,36,642,20],[382,0,645,8,"registrationCancellationKey"],[382,12,645,8,"registrationCancellationKey"],[382,39,645,35],[382,41,645,8,"registrationCancellationKey"],[383,0,642,20],[384,0,635,39],[384,9,635,4],[385,0,650,4,"listeners"],[385,8,650,4,"listeners"],[385,17,650,13],[385,21,650,17],[385,22,650,4],[386,0,653,4],[386,15,653,11,"callback"],[386,23,653,4],[387,0,654,3],[390,28,672,40],[391,0,672,40],[391,12,672,6,"eventType"],[391,21,672,40],[391,92,672,18],[391,94,672,40],[392,0,672,40],[392,12,672,22,"originalCallback"],[392,28,672,40],[394,0,673,4],[394,12,673,8],[394,13,673,9,"arguments"],[394,22,673,18],[394,23,673,19,"length"],[394,29,673,4],[394,31,673,27],[395,0,676,6],[395,17,676,13,"SyncTree"],[395,35,676,22,"removeListenersForRegistrations"],[395,66,676,13],[395,67,676,54,"SyncTree"],[395,85,676,63,"getRegistrationsByPath"],[395,107,676,54],[395,108,676,86],[395,113,676,91,"path"],[395,117,676,54],[395,118,676,13],[395,119,676,6],[396,0,677,5],[398,0,683,4],[398,12,683,8,"eventType"],[398,21,683,17],[398,26,683,22],[398,27,683,23],[398,48,683,32,"eventType"],[398,57,683,23],[398,58,683,22],[398,62,683,46],[398,63,683,47,"ReferenceEventTypes"],[398,82,683,66],[398,83,683,67,"eventType"],[398,92,683,66],[398,93,683,17],[398,94,683,4],[398,96,683,80],[399,0,684,6],[399,16,684,12],[399,20,684,16,"Error"],[399,25,684,12],[399,101,684,94,"Object"],[399,107,684,100],[399,108,684,101,"keys"],[399,112,684,94],[399,113,684,106,"ReferenceEventTypes"],[399,132,684,94],[399,134,684,127,"join"],[399,138,684,94],[399,139,684,132],[399,143,684,94],[399,144,684,12],[399,152,684,6],[400,0,685,5],[402,0,687,4],[402,12,687,8,"originalCallback"],[402,28,687,24],[402,32,687,28],[402,33,687,29],[402,56,687,40,"originalCallback"],[402,72,687,29],[402,73,687,4],[402,75,687,59],[403,0,688,6],[403,16,688,12],[403,20,688,16,"Error"],[403,25,688,12],[403,26,688,22],[403,128,688,12],[403,129,688,6],[404,0,689,5],[406,0,697,4],[406,12,697,8,"eventType"],[406,21,697,17],[406,25,697,21,"originalCallback"],[406,41,697,4],[406,43,697,39],[407,0,698,6],[407,14,698,12,"registration"],[407,26,698,24],[407,29,698,27,"SyncTree"],[407,47,698,36,"getOneByPathEventListener"],[407,72,698,27],[407,73,698,62],[407,78,698,67,"path"],[407,82,698,27],[407,84,698,73,"eventType"],[407,93,698,27],[407,95,698,84,"originalCallback"],[407,111,698,27],[407,112,698,6],[409,0,699,6],[409,14,699,10],[409,15,699,11,"registration"],[409,27,699,6],[409,29,699,25],[409,36,699,32],[409,38,699,25],[411,0,701,6,"SyncTree"],[411,28,701,15,"removeListenersForRegistrations"],[411,59,701,6],[411,60,701,47],[411,61,701,51,"registration"],[411,73,701,47],[411,89,701,6],[413,0,704,6],[413,17,704,13,"SyncTree"],[413,35,704,22,"removeListenerRegistrations"],[413,62,704,13],[413,63,704,50,"originalCallback"],[413,79,704,13],[413,81,704,68],[413,82,704,69,"registration"],[413,94,704,68],[413,95,704,13],[413,96,704,6],[414,0,705,5],[416,0,709,4],[416,12,709,10,"registrations"],[416,25,709,23],[416,28,709,26,"SyncTree"],[416,46,709,35,"getRegistrationsByPathEvent"],[416,73,709,26],[416,74,709,63],[416,79,709,68,"path"],[416,83,709,26],[416,85,709,74,"eventType"],[416,94,709,26],[416,95,709,4],[418,0,710,4,"SyncTree"],[418,26,710,13,"removeListenersForRegistrations"],[418,57,710,4],[418,58,710,45,"SyncTree"],[418,76,710,54,"getRegistrationsByPathEvent"],[418,103,710,45],[418,104,710,82],[418,109,710,87,"path"],[418,113,710,45],[418,115,710,96,"eventType"],[418,124,710,45],[418,140,710,4],[420,0,711,4],[420,15,711,11,"SyncTree"],[420,33,711,20,"removeListenersForRegistrations"],[420,64,711,11],[420,65,711,52,"registrations"],[420,78,711,11],[420,79,711,4],[421,0,712,3],[424,26,458,15],[425,0,459,4],[425,12,459,8],[425,17,459,13,"path"],[425,21,459,8],[425,26,459,22],[425,29,459,4],[425,31,459,27],[425,38,459,34],[425,42,459,27],[426,0,460,4],[426,15,460,11],[426,19,460,15,"Reference"],[426,28,460,11],[426,29,460,25],[426,34,460,30,"_database"],[426,43,460,11],[426,45,460,41],[426,50,460,46,"path"],[426,54,460,41],[426,55,460,51,"substring"],[426,64,460,41],[426,65,460,61],[426,66,460,41],[426,68,460,64],[426,73,460,69,"path"],[426,77,460,64],[426,78,460,74,"lastIndexOf"],[426,89,460,64],[426,90,460,86],[426,93,460,64],[426,94,460,41],[426,95,460,11],[426,96,460,4],[427,0,461,3],[430,26,470,12],[431,0,471,4],[431,15,471,11],[431,19,471,4],[432,0,472,3],[435,26,481,13],[436,0,482,4],[436,15,482,11],[436,19,482,15,"Reference"],[436,28,482,11],[436,29,482,25],[436,34,482,30,"_database"],[436,43,482,11],[436,45,482,41],[436,48,482,11],[436,49,482,4],[437,0,483,3],[440,4,56,39,"ReferenceBase"],[440,27]]},"type":"js/module"}]}