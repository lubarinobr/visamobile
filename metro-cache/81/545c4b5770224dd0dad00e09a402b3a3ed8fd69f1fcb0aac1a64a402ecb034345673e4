{"dependencies":[],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  (function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : global.deepmerge = factory();\n  })(this, function () {\n    'use strict';\n\n    var isMergeableObject = function isMergeableObject(value) {\n      return isNonNullObject(value) && !isSpecial(value);\n    };\n\n    function isNonNullObject(value) {\n      return !!value && typeof value === 'object';\n    }\n\n    function isSpecial(value) {\n      var stringValue = Object.prototype.toString.call(value);\n      return stringValue === '[object RegExp]' || stringValue === '[object Date]' || isReactElement(value);\n    }\n\n    var canUseSymbol = typeof Symbol === 'function' && (typeof Symbol === \"function\" ? Symbol.for : \"@@for\");\n    var REACT_ELEMENT_TYPE = canUseSymbol ? (typeof Symbol === \"function\" ? Symbol.for : \"@@for\")('react.element') : 0xeac7;\n\n    function isReactElement(value) {\n      return value.$$typeof === REACT_ELEMENT_TYPE;\n    }\n\n    function emptyTarget(val) {\n      return Array.isArray(val) ? [] : {};\n    }\n\n    function cloneUnlessOtherwiseSpecified(value, options) {\n      return options.clone !== false && options.isMergeableObject(value) ? deepmerge(emptyTarget(value), value, options) : value;\n    }\n\n    function defaultArrayMerge(target, source, options) {\n      return target.concat(source).map(function (element) {\n        return cloneUnlessOtherwiseSpecified(element, options);\n      });\n    }\n\n    function getMergeFunction(key, options) {\n      if (!options.customMerge) {\n        return deepmerge;\n      }\n\n      var customMerge = options.customMerge(key);\n      return typeof customMerge === 'function' ? customMerge : deepmerge;\n    }\n\n    function mergeObject(target, source, options) {\n      var destination = {};\n\n      if (options.isMergeableObject(target)) {\n        Object.keys(target).forEach(function (key) {\n          destination[key] = cloneUnlessOtherwiseSpecified(target[key], options);\n        });\n      }\n\n      Object.keys(source).forEach(function (key) {\n        if (!options.isMergeableObject(source[key]) || !target[key]) {\n          destination[key] = cloneUnlessOtherwiseSpecified(source[key], options);\n        } else {\n          destination[key] = getMergeFunction(key, options)(target[key], source[key], options);\n        }\n      });\n      return destination;\n    }\n\n    function deepmerge(target, source, options) {\n      options = options || {};\n      options.arrayMerge = options.arrayMerge || defaultArrayMerge;\n      options.isMergeableObject = options.isMergeableObject || isMergeableObject;\n      var sourceIsArray = Array.isArray(source);\n      var targetIsArray = Array.isArray(target);\n      var sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;\n\n      if (!sourceAndTargetTypesMatch) {\n        return cloneUnlessOtherwiseSpecified(source, options);\n      } else if (sourceIsArray) {\n        return options.arrayMerge(target, source, options);\n      } else {\n        return mergeObject(target, source, options);\n      }\n    }\n\n    deepmerge.all = function deepmergeAll(array, options) {\n      if (!Array.isArray(array)) {\n        throw new Error('first argument should be an array');\n      }\n\n      return array.reduce(function (prev, next) {\n        return deepmerge(prev, next, options);\n      }, {});\n    };\n\n    var deepmerge_1 = deepmerge;\n    return deepmerge_1;\n  });\n});","map":[[2,0,1,1],[2,13,1,11,"global"],[2,19,1,1],[2,21,1,19,"factory"],[2,28,1,1],[2,30,1,28],[3,0,2,1],[3,11,2,8,"exports"],[3,18,2,1],[3,23,2,20],[3,31,2,1],[3,35,2,32],[3,42,2,39,"module"],[3,48,2,32],[3,53,2,50],[3,64,2,1],[3,67,2,64,"module"],[3,73,2,70],[3,74,2,71,"exports"],[3,81,2,64],[3,84,2,81,"factory"],[3,91,2,88],[3,93,2,1],[3,96,3,1],[3,103,3,8,"define"],[3,109,3,1],[3,114,3,19],[3,124,3,1],[3,128,3,33,"define"],[3,134,3,39],[3,135,3,40,"amd"],[3,138,3,1],[3,141,3,46,"define"],[3,147,3,52],[3,148,3,53,"factory"],[3,155,3,52],[3,156,3,1],[3,159,4,2,"global"],[3,165,4,8],[3,166,4,9,"deepmerge"],[3,175,4,2],[3,178,4,21,"factory"],[3,185,4,28],[3,187,2,1],[4,0,5,1],[4,3,1,1],[4,5,5,2],[4,9,1,1],[4,11,5,9],[4,23,5,21],[5,0,5,23],[7,0,7,0],[7,8,7,4,"isMergeableObject"],[7,25,7,21],[7,28,7,24],[7,37,7,33,"isMergeableObject"],[7,54,7,24],[7,55,7,51,"value"],[7,60,7,24],[7,62,7,58],[8,0,8,1],[8,13,8,8,"isNonNullObject"],[8,28,8,23],[8,29,8,24,"value"],[8,34,8,23],[8,35,8,8],[8,39,9,5],[8,40,9,6,"isSpecial"],[8,49,9,15],[8,50,9,16,"value"],[8,55,9,15],[8,56,8,1],[9,0,10,1],[9,5,7,0],[11,0,12,0],[11,13,12,9,"isNonNullObject"],[11,28,12,0],[11,29,12,25,"value"],[11,34,12,0],[11,36,12,32],[12,0,13,1],[12,13,13,8],[12,14,13,9],[12,15,13,10,"value"],[12,20,13,8],[12,24,13,19],[12,31,13,26,"value"],[12,36,13,19],[12,41,13,36],[12,49,13,1],[13,0,14,1],[15,0,16,0],[15,13,16,9,"isSpecial"],[15,22,16,0],[15,23,16,19,"value"],[15,28,16,0],[15,30,16,26],[16,0,17,1],[16,10,17,5,"stringValue"],[16,21,17,16],[16,24,17,19,"Object"],[16,30,17,25],[16,31,17,26,"prototype"],[16,40,17,19],[16,41,17,36,"toString"],[16,49,17,19],[16,50,17,45,"call"],[16,54,17,19],[16,55,17,50,"value"],[16,60,17,19],[16,61,17,1],[17,0,19,1],[17,13,19,8,"stringValue"],[17,24,19,19],[17,29,19,24],[17,46,19,8],[17,50,20,5,"stringValue"],[17,61,20,16],[17,66,20,21],[17,81,19,8],[17,85,21,5,"isReactElement"],[17,99,21,19],[17,100,21,20,"value"],[17,105,21,19],[17,106,19,1],[18,0,22,1],[20,0,25,0],[20,8,25,4,"canUseSymbol"],[20,20,25,16],[20,23,25,19],[20,30,25,26,"Symbol"],[20,36,25,19],[20,41,25,37],[20,51,25,19],[20,87,25,51,"Symbol"],[20,93,25,57],[20,94,25,58,"for"],[20,97,25,19],[20,108,25,0],[21,0,26,0],[21,8,26,4,"REACT_ELEMENT_TYPE"],[21,26,26,22],[21,29,26,25,"canUseSymbol"],[21,41,26,37],[21,44,26,40],[21,76,26,40,"Symbol"],[21,82,26,46],[21,83,26,47,"for"],[21,86,26,40],[21,98,26,51],[21,113,26,40],[21,114,26,37],[21,117,26,70],[21,123,26,0],[23,0,28,0],[23,13,28,9,"isReactElement"],[23,27,28,0],[23,28,28,24,"value"],[23,33,28,0],[23,35,28,31],[24,0,29,1],[24,13,29,8,"value"],[24,18,29,13],[24,19,29,14,"$$typeof"],[24,27,29,8],[24,32,29,27,"REACT_ELEMENT_TYPE"],[24,50,29,1],[25,0,30,1],[27,0,32,0],[27,13,32,9,"emptyTarget"],[27,24,32,0],[27,25,32,21,"val"],[27,28,32,0],[27,30,32,26],[28,0,33,1],[28,13,33,8,"Array"],[28,18,33,13],[28,19,33,14,"isArray"],[28,26,33,8],[28,27,33,22,"val"],[28,30,33,8],[28,34,33,29],[28,36,33,8],[28,39,33,34],[28,41,33,1],[29,0,34,1],[31,0,36,0],[31,13,36,9,"cloneUnlessOtherwiseSpecified"],[31,42,36,0],[31,43,36,39,"value"],[31,48,36,0],[31,50,36,46,"options"],[31,57,36,0],[31,59,36,55],[32,0,37,1],[32,13,37,9,"options"],[32,20,37,16],[32,21,37,17,"clone"],[32,26,37,9],[32,31,37,27],[32,36,37,9],[32,40,37,36,"options"],[32,47,37,43],[32,48,37,44,"isMergeableObject"],[32,65,37,36],[32,66,37,62,"value"],[32,71,37,36],[32,72,37,8],[32,75,38,4,"deepmerge"],[32,84,38,13],[32,85,38,14,"emptyTarget"],[32,96,38,25],[32,97,38,26,"value"],[32,102,38,25],[32,103,38,13],[32,105,38,34,"value"],[32,110,38,13],[32,112,38,41,"options"],[32,119,38,13],[32,120,37,8],[32,123,39,4,"value"],[32,128,37,1],[33,0,40,1],[35,0,42,0],[35,13,42,9,"defaultArrayMerge"],[35,30,42,0],[35,31,42,27,"target"],[35,37,42,0],[35,39,42,35,"source"],[35,45,42,0],[35,47,42,43,"options"],[35,54,42,0],[35,56,42,52],[36,0,43,1],[36,13,43,8,"target"],[36,19,43,14],[36,20,43,15,"concat"],[36,26,43,8],[36,27,43,22,"source"],[36,33,43,8],[36,35,43,30,"map"],[36,38,43,8],[36,39,43,34],[36,49,43,43,"element"],[36,56,43,34],[36,58,43,52],[37,0,44,2],[37,15,44,9,"cloneUnlessOtherwiseSpecified"],[37,44,44,38],[37,45,44,39,"element"],[37,52,44,38],[37,54,44,48,"options"],[37,61,44,38],[37,62,44,2],[38,0,45,2],[38,7,43,8],[38,8,43,1],[39,0,46,1],[41,0,48,0],[41,13,48,9,"getMergeFunction"],[41,29,48,0],[41,30,48,26,"key"],[41,33,48,0],[41,35,48,31,"options"],[41,42,48,0],[41,44,48,40],[42,0,49,1],[42,10,49,5],[42,11,49,6,"options"],[42,18,49,13],[42,19,49,14,"customMerge"],[42,30,49,1],[42,32,49,27],[43,0,50,2],[43,15,50,9,"deepmerge"],[43,24,50,2],[44,0,51,2],[46,0,52,1],[46,10,52,5,"customMerge"],[46,21,52,16],[46,24,52,19,"options"],[46,31,52,26],[46,32,52,27,"customMerge"],[46,43,52,19],[46,44,52,39,"key"],[46,47,52,19],[46,48,52,1],[47,0,53,1],[47,13,53,8],[47,20,53,15,"customMerge"],[47,31,53,8],[47,36,53,31],[47,46,53,8],[47,49,53,44,"customMerge"],[47,60,53,8],[47,63,53,58,"deepmerge"],[47,72,53,1],[48,0,54,1],[50,0,56,0],[50,13,56,9,"mergeObject"],[50,24,56,0],[50,25,56,21,"target"],[50,31,56,0],[50,33,56,29,"source"],[50,39,56,0],[50,41,56,37,"options"],[50,48,56,0],[50,50,56,46],[51,0,57,1],[51,10,57,5,"destination"],[51,21,57,16],[51,24,57,19],[51,26,57,1],[53,0,58,1],[53,10,58,5,"options"],[53,17,58,12],[53,18,58,13,"isMergeableObject"],[53,35,58,5],[53,36,58,31,"target"],[53,42,58,5],[53,43,58,1],[53,45,58,40],[54,0,59,2,"Object"],[54,8,59,2,"Object"],[54,14,59,8],[54,15,59,9,"keys"],[54,19,59,2],[54,20,59,14,"target"],[54,26,59,2],[54,28,59,22,"forEach"],[54,35,59,2],[54,36,59,30],[54,46,59,39,"key"],[54,49,59,30],[54,51,59,44],[55,0,60,3,"destination"],[55,10,60,3,"destination"],[55,21,60,14],[55,22,60,15,"key"],[55,25,60,14],[55,26,60,3],[55,29,60,22,"cloneUnlessOtherwiseSpecified"],[55,58,60,51],[55,59,60,52,"target"],[55,65,60,58],[55,66,60,59,"key"],[55,69,60,58],[55,70,60,51],[55,72,60,65,"options"],[55,79,60,51],[55,80,60,3],[56,0,61,3],[56,9,59,2],[57,0,62,2],[59,0,63,1,"Object"],[59,6,63,1,"Object"],[59,12,63,7],[59,13,63,8,"keys"],[59,17,63,1],[59,18,63,13,"source"],[59,24,63,1],[59,26,63,21,"forEach"],[59,33,63,1],[59,34,63,29],[59,44,63,38,"key"],[59,47,63,29],[59,49,63,43],[60,0,64,2],[60,12,64,6],[60,13,64,7,"options"],[60,20,64,14],[60,21,64,15,"isMergeableObject"],[60,38,64,7],[60,39,64,33,"source"],[60,45,64,39],[60,46,64,40,"key"],[60,49,64,39],[60,50,64,7],[60,51,64,6],[60,55,64,49],[60,56,64,50,"target"],[60,62,64,56],[60,63,64,57,"key"],[60,66,64,56],[60,67,64,2],[60,69,64,63],[61,0,65,3,"destination"],[61,10,65,3,"destination"],[61,21,65,14],[61,22,65,15,"key"],[61,25,65,14],[61,26,65,3],[61,29,65,22,"cloneUnlessOtherwiseSpecified"],[61,58,65,51],[61,59,65,52,"source"],[61,65,65,58],[61,66,65,59,"key"],[61,69,65,58],[61,70,65,51],[61,72,65,65,"options"],[61,79,65,51],[61,80,65,3],[62,0,66,3],[62,9,64,2],[62,15,66,9],[63,0,67,3,"destination"],[63,10,67,3,"destination"],[63,21,67,14],[63,22,67,15,"key"],[63,25,67,14],[63,26,67,3],[63,29,67,22,"getMergeFunction"],[63,45,67,38],[63,46,67,39,"key"],[63,49,67,38],[63,51,67,44,"options"],[63,58,67,38],[63,59,67,22],[63,60,67,53,"target"],[63,66,67,59],[63,67,67,60,"key"],[63,70,67,59],[63,71,67,22],[63,73,67,66,"source"],[63,79,67,72],[63,80,67,73,"key"],[63,83,67,72],[63,84,67,22],[63,86,67,79,"options"],[63,93,67,22],[63,94,67,3],[64,0,68,3],[65,0,69,2],[65,7,63,1],[66,0,70,1],[66,13,70,8,"destination"],[66,24,70,1],[67,0,71,1],[69,0,73,0],[69,13,73,9,"deepmerge"],[69,22,73,0],[69,23,73,19,"target"],[69,29,73,0],[69,31,73,27,"source"],[69,37,73,0],[69,39,73,35,"options"],[69,46,73,0],[69,48,73,44],[70,0,74,1,"options"],[70,6,74,1,"options"],[70,13,74,8],[70,16,74,11,"options"],[70,23,74,18],[70,27,74,22],[70,29,74,1],[71,0,75,1,"options"],[71,6,75,1,"options"],[71,13,75,8],[71,14,75,9,"arrayMerge"],[71,24,75,1],[71,27,75,22,"options"],[71,34,75,29],[71,35,75,30,"arrayMerge"],[71,45,75,22],[71,49,75,44,"defaultArrayMerge"],[71,66,75,1],[72,0,76,1,"options"],[72,6,76,1,"options"],[72,13,76,8],[72,14,76,9,"isMergeableObject"],[72,31,76,1],[72,34,76,29,"options"],[72,41,76,36],[72,42,76,37,"isMergeableObject"],[72,59,76,29],[72,63,76,58,"isMergeableObject"],[72,80,76,1],[73,0,78,1],[73,10,78,5,"sourceIsArray"],[73,23,78,18],[73,26,78,21,"Array"],[73,31,78,26],[73,32,78,27,"isArray"],[73,39,78,21],[73,40,78,35,"source"],[73,46,78,21],[73,47,78,1],[74,0,79,1],[74,10,79,5,"targetIsArray"],[74,23,79,18],[74,26,79,21,"Array"],[74,31,79,26],[74,32,79,27,"isArray"],[74,39,79,21],[74,40,79,35,"target"],[74,46,79,21],[74,47,79,1],[75,0,80,1],[75,10,80,5,"sourceAndTargetTypesMatch"],[75,35,80,30],[75,38,80,33,"sourceIsArray"],[75,51,80,46],[75,56,80,51,"targetIsArray"],[75,69,80,1],[77,0,82,1],[77,10,82,5],[77,11,82,6,"sourceAndTargetTypesMatch"],[77,36,82,1],[77,38,82,33],[78,0,83,2],[78,15,83,9,"cloneUnlessOtherwiseSpecified"],[78,44,83,38],[78,45,83,39,"source"],[78,51,83,38],[78,53,83,47,"options"],[78,60,83,38],[78,61,83,2],[79,0,84,2],[79,7,82,1],[79,13,84,8],[79,17,84,12,"sourceIsArray"],[79,30,84,8],[79,32,84,27],[80,0,85,2],[80,15,85,9,"options"],[80,22,85,16],[80,23,85,17,"arrayMerge"],[80,33,85,9],[80,34,85,28,"target"],[80,40,85,9],[80,42,85,36,"source"],[80,48,85,9],[80,50,85,44,"options"],[80,57,85,9],[80,58,85,2],[81,0,86,2],[81,7,84,8],[81,13,86,8],[82,0,87,2],[82,15,87,9,"mergeObject"],[82,26,87,20],[82,27,87,21,"target"],[82,33,87,20],[82,35,87,29,"source"],[82,41,87,20],[82,43,87,37,"options"],[82,50,87,20],[82,51,87,2],[83,0,88,2],[84,0,89,1],[86,0,91,0,"deepmerge"],[86,4,91,0,"deepmerge"],[86,13,91,9],[86,14,91,10,"all"],[86,17,91,0],[86,20,91,16],[86,29,91,25,"deepmergeAll"],[86,41,91,16],[86,42,91,38,"array"],[86,47,91,16],[86,49,91,45,"options"],[86,56,91,16],[86,58,91,54],[87,0,92,1],[87,10,92,5],[87,11,92,6,"Array"],[87,16,92,11],[87,17,92,12,"isArray"],[87,24,92,6],[87,25,92,20,"array"],[87,30,92,6],[87,31,92,1],[87,33,92,28],[88,0,93,2],[88,14,93,8],[88,18,93,12,"Error"],[88,23,93,8],[88,24,93,18],[88,59,93,8],[88,60,93,2],[89,0,94,2],[91,0,96,1],[91,13,96,8,"array"],[91,18,96,13],[91,19,96,14,"reduce"],[91,25,96,8],[91,26,96,21],[91,36,96,30,"prev"],[91,40,96,21],[91,42,96,36,"next"],[91,46,96,21],[91,48,96,42],[92,0,97,2],[92,15,97,9,"deepmerge"],[92,24,97,18],[92,25,97,19,"prev"],[92,29,97,18],[92,31,97,25,"next"],[92,35,97,18],[92,37,97,31,"options"],[92,44,97,18],[92,45,97,2],[93,0,98,2],[93,7,96,8],[93,9,98,4],[93,11,96,8],[93,12,96,1],[94,0,99,1],[94,5,91,0],[96,0,101,0],[96,8,101,4,"deepmerge_1"],[96,19,101,15],[96,22,101,18,"deepmerge"],[96,31,101,0],[97,0,103,0],[97,11,103,7,"deepmerge_1"],[97,22,103,0],[98,0,105,1],[98,3,1,1],[98,4,1,0]]},"type":"js/module"}]}