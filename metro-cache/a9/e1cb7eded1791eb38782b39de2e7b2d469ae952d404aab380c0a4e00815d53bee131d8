{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/objectSpread","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false}},{"name":"../FieldPath","data":{"isAsync":false}},{"name":"../../../utils","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.parseUpdateArgs = exports.mergeFieldPathData = void 0;\n\n  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/slicedToArray\"));\n\n  var _objectSpread5 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/objectSpread\"));\n\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/defineProperty\"));\n\n  var _FieldPath = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"../FieldPath\"));\n\n  var _utils = _$$_REQUIRE(_dependencyMap[5], \"../../../utils\");\n\n  var buildFieldPathData = function buildFieldPathData(segments, value) {\n    if (segments.length === 1) {\n      return (0, _defineProperty2.default)({}, segments[0], value);\n    }\n\n    return (0, _defineProperty2.default)({}, segments[0], buildFieldPathData(segments.slice(1), value));\n  };\n\n  var mergeFieldPathData = function mergeFieldPathData(data, segments, value) {\n    if (segments.length === 1) {\n      return (0, _objectSpread5.default)({}, data, (0, _defineProperty2.default)({}, segments[0], value));\n    }\n\n    if (data[segments[0]]) {\n      return (0, _objectSpread5.default)({}, data, (0, _defineProperty2.default)({}, segments[0], mergeFieldPathData(data[segments[0]], segments.slice(1), value)));\n    }\n\n    return (0, _objectSpread5.default)({}, data, (0, _defineProperty2.default)({}, segments[0], buildFieldPathData(segments.slice(1), value)));\n  };\n\n  exports.mergeFieldPathData = mergeFieldPathData;\n\n  var parseUpdateArgs = function parseUpdateArgs(args, methodName) {\n    var data = {};\n\n    if (args.length === 1) {\n      if (!(0, _utils.isObject)(args[0])) {\n        throw new Error(methodName + \" failed: If using a single update argument, it must be an object.\");\n      }\n\n      var _args = (0, _slicedToArray2.default)(args, 1);\n\n      data = _args[0];\n    } else if (args.length % 2 === 1) {\n      throw new Error(methodName + \" failed: The update arguments must be either a single object argument, or equal numbers of key/value pairs.\");\n    } else {\n      for (var i = 0; i < args.length; i += 2) {\n        var key = args[i];\n        var value = args[i + 1];\n\n        if ((0, _utils.isString)(key)) {\n          data[key] = value;\n        } else if (key instanceof _FieldPath.default) {\n          data = mergeFieldPathData(data, key._segments, value);\n        } else {\n          throw new Error(methodName + \" failed: Argument at index \" + i + \" must be a string or FieldPath\");\n        }\n      }\n    }\n\n    return data;\n  };\n\n  exports.parseUpdateArgs = parseUpdateArgs;\n});","map":[[15,0,1,0],[17,0,2,0],[19,0,4,0],[19,6,4,6,"buildFieldPathData"],[19,24,4,24],[19,27,4,27],[19,36,4,6,"buildFieldPathData"],[19,54,4,27],[19,55,4,28,"segments"],[19,63,4,27],[19,65,4,38,"value"],[19,70,4,27],[19,72,4,48],[20,0,5,2],[20,8,5,6,"segments"],[20,16,5,14],[20,17,5,15,"length"],[20,23,5,6],[20,28,5,26],[20,29,5,2],[20,31,5,29],[21,0,6,4],[21,47,7,7,"segments"],[21,55,7,15],[21,56,7,16],[21,57,7,15],[21,58,6,4],[21,60,7,21,"value"],[21,65,6,4],[22,0,9,3],[24,0,11,2],[24,45,12,5,"segments"],[24,53,12,13],[24,54,12,14],[24,55,12,13],[24,56,11,2],[24,58,12,19,"buildFieldPathData"],[24,76,12,37],[24,77,12,38,"segments"],[24,85,12,46],[24,86,12,47,"slice"],[24,91,12,38],[24,92,12,53],[24,93,12,38],[24,94,12,37],[24,96,12,57,"value"],[24,101,12,37],[24,102,11,2],[25,0,14,1],[25,3,4,0],[27,0,17,7],[27,6,17,13,"mergeFieldPathData"],[27,24,17,31],[27,27,17,34],[27,36,17,13,"mergeFieldPathData"],[27,54,17,34],[27,55,17,35,"data"],[27,59,17,34],[27,61,17,41,"segments"],[27,69,17,34],[27,71,17,51,"value"],[27,76,17,34],[27,78,17,61],[28,0,18,2],[28,8,18,6,"segments"],[28,16,18,14],[28,17,18,15,"length"],[28,23,18,6],[28,28,18,26],[28,29,18,2],[28,31,18,29],[29,0,19,4],[29,45,19,16,"data"],[29,49,19,4],[29,85,20,7,"segments"],[29,93,20,15],[29,94,20,16],[29,95,20,15],[29,96,19,4],[29,98,20,21,"value"],[29,103,19,4],[30,0,22,3],[32,0,24,2],[32,8,24,6,"data"],[32,12,24,10],[32,13,24,11,"segments"],[32,21,24,19],[32,22,24,20],[32,23,24,19],[32,24,24,10],[32,25,24,2],[32,27,24,25],[33,0,25,4],[33,45,25,16,"data"],[33,49,25,4],[33,85,26,7,"segments"],[33,93,26,15],[33,94,26,16],[33,95,26,15],[33,96,25,4],[33,98,26,21,"mergeFieldPathData"],[33,116,26,39],[33,117,26,40,"data"],[33,121,26,44],[33,122,26,45,"segments"],[33,130,26,53],[33,131,26,54],[33,132,26,53],[33,133,26,44],[33,134,26,39],[33,136,26,59,"segments"],[33,144,26,67],[33,145,26,68,"slice"],[33,150,26,59],[33,151,26,74],[33,152,26,59],[33,153,26,39],[33,155,26,78,"value"],[33,160,26,39],[33,161,25,4],[34,0,28,3],[36,0,30,2],[36,43,30,14,"data"],[36,47,30,2],[36,83,31,5,"segments"],[36,91,31,13],[36,92,31,14],[36,93,31,13],[36,94,30,2],[36,96,31,19,"buildFieldPathData"],[36,114,31,37],[36,115,31,38,"segments"],[36,123,31,46],[36,124,31,47,"slice"],[36,129,31,38],[36,130,31,53],[36,131,31,38],[36,132,31,37],[36,134,31,57,"value"],[36,139,31,37],[36,140,30,2],[37,0,33,1],[37,3,17,7],[41,0,34,7],[41,6,34,13,"parseUpdateArgs"],[41,21,34,28],[41,24,34,31],[41,33,34,13,"parseUpdateArgs"],[41,48,34,31],[41,49,34,32,"args"],[41,53,34,31],[41,55,34,38,"methodName"],[41,65,34,31],[41,67,34,53],[42,0,35,2],[42,8,35,6,"data"],[42,12,35,10],[42,15,35,13],[42,17,35,2],[44,0,37,2],[44,8,37,6,"args"],[44,12,37,10],[44,13,37,11,"length"],[44,19,37,6],[44,24,37,22],[44,25,37,2],[44,27,37,25],[45,0,38,4],[45,10,38,8],[45,11,38,9],[45,32,38,18,"args"],[45,36,38,22],[45,37,38,23],[45,38,38,22],[45,39,38,9],[45,40,38,4],[45,42,38,28],[46,0,39,6],[46,14,39,12],[46,18,39,16,"Error"],[46,23,39,12],[46,24,39,25,"methodName"],[46,34,39,12],[46,105,39,6],[47,0,40,5],[49,0,37,25],[49,47,42,13,"args"],[49,51,37,25],[51,0,42,5,"data"],[51,6,42,5,"data"],[51,10,37,25],[52,0,43,3],[52,5,37,2],[52,11,43,9],[52,15,43,13,"args"],[52,19,43,17],[52,20,43,18,"length"],[52,26,43,13],[52,29,43,27],[52,30,43,13],[52,35,43,33],[52,36,43,9],[52,38,43,36],[53,0,44,4],[53,12,44,10],[53,16,44,14,"Error"],[53,21,44,10],[53,22,44,23,"methodName"],[53,32,44,10],[53,145,44,4],[54,0,45,3],[54,5,43,9],[54,11,45,9],[55,0,46,4],[55,11,46,9],[55,15,46,13,"i"],[55,16,46,14],[55,19,46,17],[55,20,46,4],[55,22,46,20,"i"],[55,23,46,21],[55,26,46,24,"args"],[55,30,46,28],[55,31,46,29,"length"],[55,37,46,4],[55,39,46,37,"i"],[55,40,46,38],[55,44,46,42],[55,45,46,4],[55,47,46,45],[56,0,47,6],[56,12,47,12,"key"],[56,15,47,15],[56,18,47,18,"args"],[56,22,47,22],[56,23,47,23,"i"],[56,24,47,22],[56,25,47,6],[57,0,48,6],[57,12,48,12,"value"],[57,17,48,17],[57,20,48,20,"args"],[57,24,48,24],[57,25,48,25,"i"],[57,26,48,26],[57,29,48,29],[57,30,48,24],[57,31,48,6],[59,0,50,6],[59,12,50,10],[59,33,50,19,"key"],[59,36,50,10],[59,37,50,6],[59,39,50,25],[60,0,51,8,"data"],[60,10,51,8,"data"],[60,14,51,12],[60,15,51,13,"key"],[60,18,51,12],[60,19,51,8],[60,22,51,20,"value"],[60,27,51,8],[61,0,52,7],[61,9,50,6],[61,15,52,13],[61,19,52,17,"key"],[61,22,52,20],[61,34,52,32,"FieldPath"],[61,52,52,13],[61,54,52,43],[62,0,53,8,"data"],[62,10,53,8,"data"],[62,14,53,12],[62,17,53,15,"mergeFieldPathData"],[62,35,53,33],[62,36,53,34,"data"],[62,40,53,33],[62,42,53,40,"key"],[62,45,53,43],[62,46,53,44,"_segments"],[62,55,53,33],[62,57,53,55,"value"],[62,62,53,33],[62,63,53,8],[63,0,54,7],[63,9,52,13],[63,15,54,13],[64,0,55,8],[64,16,55,14],[64,20,55,18,"Error"],[64,25,55,14],[64,26,55,27,"methodName"],[64,36,55,14],[64,71,55,67,"i"],[64,72,55,14],[64,108,55,8],[65,0,56,7],[66,0,57,5],[67,0,58,3],[69,0,60,2],[69,11,60,9,"data"],[69,15,60,2],[70,0,61,1],[70,3,34,7]]},"type":"js/module"}]}